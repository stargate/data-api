download_url:  Your zip secure bundle from AstraDB
provider: ec2
zone: us-west-2
instance: m5.2xlarge
token: token
workload_duration: 25m
keyspace: fallout
workload_file: https://raw.githubusercontent.com/stargate/dataapi/main/fallout/vector-test-nosqlbench.yaml
dataset: https://raw.githubusercontent.com/stargate/dataapi/main/fallout/vector-dataset.txt
client_count: 1
write_cycles: 600
read_cycles: 600
update_cycles: 600
delete_cycles: 600
threads: 20
---
#  Template Params Explanation
#  download_url:  Your zip secure bundle from AstraDB
#  provider: ec2
#  zone: us-west-2
#  instance: desired instance type
#  token: Just put token variable name here, set up token as AstraDB token in the fallout profile
#  workload_duration: workload duration time
#  keyspace: Your existing AstraDB keyspace
#  workload_file: workload_file is in Data API repo
#  dataset: dataset file is in Data API repo, if you want to change vector size(default 1536), need to change the dataset.txt and workload file.
#  client_count: 1
#  write_cycles: 600
#  read_cycles: 600
#  update_cycles: 600
#  delete_cycles: 600
#  threads: 20

ensemble:
  server:
    node.count: 1
    provisioner:
      name: existing_astra
      properties:
        bundle_download_url: {{download_url}}
        keyspace: {{keyspace}}
        username: token
        password: <<secret:{{token}}>>
        token: <<secret:{{token}}>>

  client:
    node.count: {{client_count}}
    provisioner:
      name: ctool
      properties:
        cloud.provider: {{provider}}
        cloud.region: {{zone}}
        cloud.instance.type: {{instance}}
    configuration_manager:
      - name: nosqlbench_ssh
        properties:
          version: 5.17.3-release

workload:
  phases:
    - schema-collection:
        module: nosqlbench
        properties:
          client.size: 1
          alias: schema-collection
          service_type: stargate
          args:
            - driver=http
            - yaml={{workload_file}}
            - tags=block:schema-collection
            - namespace={{keyspace}}
            - protocol=https
            - dataapi_port=443
            - path_prefix=/api/json
            - threads=1
            - errors=stop
    - write:
        module: nosqlbench
        properties:
          alias: write
          service_type: stargate
          cycles: {{write_cycles}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:write
            - dataset={{dataset}}
            - namespace={{keyspace}}
            - protocol=https
            - dataapi_port=443
            - path_prefix=/api/json
            - docscount={{write_cycles}}
            - threads={{threads}}
            - errors=stop

    - read:
        module: nosqlbench
        properties:
          alias: read
          service_type: stargate
          cycles: {{read_cycles}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:read
            - dataset={{dataset}}
            - namespace={{keyspace}}
            - protocol=https
            - dataapi_port=443
            - path_prefix=/api/json
            - docscount={{read_cycles}}
            - threads={{threads}}
            - errors=stop
    - update:
        module: nosqlbench
        properties:
          alias: update
          service_type: stargate
          cycles: {{update_cycles}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:update
            - dataset={{dataset}}
            - namespace={{keyspace}}
            - protocol=https
            - dataapi_port=443
            - path_prefix=/api/json
            - docscount={{update_cycles}}
            - threads={{threads}}
            - errors=stop
    - delete:
        module: nosqlbench
        properties:
          alias: delete
          service_type: stargate
          cycles: {{delete_cycles}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:delete
            - dataset={{dataset}}
            - namespace={{keyspace}}
            - protocol=https
            - dataapi_port=443
            - path_prefix=/api/json
            - docscount={{delete_cycles}}
            - threads={{threads}}
            - errors=stop
  checkers:
    verify_success:
      checker: nofail
  artifact_checkers:
    generate_chart:
      artifact_checker: hdrtool