syntax = "proto3";

option java_package = "io.stargate.embedding.gateway";

package stargate;
// The request message that is sent to embedding gateway gRPC API
message ProviderEmbedRequest {
  ProviderContext 			provider_context = 1;
  EmbeddingRequest			embedding_request = 2;

  // The provider context message for the embedding gateway gRPC API
  message ProviderContext {
    string 					          provider_name = 1;
    string  					        tenant_id = 2;
    map<string, string>  			auth_tokens = 3;
  }

  // The request message for the embedding gateway gRPC API
  message EmbeddingRequest {
    // The model name for the embedding request
    string 					      model_name = 1;
    // The dimensions of the embedding, some providers supports multiple dimensions
    optional int32 				dimensions = 2;
    // The parameter value, used when provided needs user specified parameters
    map<string, ParameterValue>  	parameters = 3;
    // The input type for the embedding request
    InputType 					  input_type = 4;
    // The input data that needs to be vectorized
    repeated string 			inputs = 5;

    // The parameter value, used when provided needs user specified parameters
    message ParameterValue {
      oneof ParameterValueOneOf {
        string 	str_value = 1;
        int32 	int_value = 2;
        float 	float_value = 3;
        bool 		bool_value = 4;
      }
    }

    // The input type for the embedding request message, some embedding supports this
    enum InputType {
      INDEX = 0;
      SEARCH = 1;
    }
  }
}



// The response message for the embedding gateway gRPC API if successful
message EmbeddingResponse {
  Usage 					usage = 1;
  repeated FloatEmbedding		embeddings = 2;
  ErrorResponse error = 3;

  // The embedding response message
  message FloatEmbedding {
    // The index of the embedding corresponding to the input
    int32 				index = 1;
    // The embedding values
    repeated float			embedding = 2;
  }

  // The usage statistics for the embedding gateway gRPC API on successful response
  message Usage {
    string 				provider_name = 1;
    string 				model_name = 2;
    string  			tenant_id = 3;
    int32 				prompt_tokens = 4;
    int32 				total_tokens = 5;
    int32 				input_bytes = 6;
    int32					output_bytes = 7;
    int32					call_duration_us = 8;
  }

  // The error response message for the embedding gateway gRPC API
  message ErrorResponse {
    string error_code = 1;
    string error_message = 2;
  }
}



// The embedding gateway gPRC API to generate embeddings
service EmbeddingService {
  rpc Embed (ProviderEmbedRequest) returns (EmbeddingResponse) {}
}