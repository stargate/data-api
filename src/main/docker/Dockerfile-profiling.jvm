####
# Dockerfile for building API image with profiling tools included
# based on less minimal UBI8 OpenJDK 17 image
#
###

# See https://catalog.redhat.com/en/software/containers/ubi9/openjdk-21/6501cdb5c34ae048c44f7814
# FROM registry.access.redhat.com/ubi9/openjdk-21:1.23
# Note, github actions docker-image-publish and release will hang when switch to ubi9
# Use ubi8 for now just to unblock the workflow.
# see https://catalog.redhat.com/en/software/containers/ubi8/openjdk-21-runtime/653fd184292263c0a2f14d69
FROM registry.access.redhat.com/ubi8/openjdk-21:1.23

ENV LANGUAGE='en_US:en'

USER root
RUN microdnf update && microdnf install gzip && microdnf install procps-ng

USER jboss
RUN mkdir -p /opt/profiler && curl -fsL https://github.com/async-profiler/async-profiler/releases/download/v2.9/async-profiler-2.9-linux-x64.tar.gz | tar zxvf - -C /opt/profiler --strip-components 1
RUN mkdir -p /opt/sjk-plus && curl -o /opt/sjk-plus/sjk-plus-0.20.jar https://repo.datastax.com/artifactory/dse/org/gridkit/jvmtool/sjk-plus/0.20/sjk-plus-0.20.jar;

# We make four distinct layers so if there are application changes the library layers can be re-used
COPY --chown=185 target/quarkus-app/lib/ /deployments/lib/
COPY --chown=185 target/quarkus-app/*.jar /deployments/
COPY --chown=185 target/quarkus-app/app/ /deployments/app/
COPY --chown=185 target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8181
USER 185
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"



